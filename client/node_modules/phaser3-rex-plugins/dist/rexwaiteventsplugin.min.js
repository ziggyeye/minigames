var e,t;e=void 0,t=function(){const e=Phaser.Structs.Set;class t{constructor(t,s){this.setCompleteCallback(t,s),this.events=new e}shutdown(){return this.setCompleteCallback(void 0,void 0),this.events.clear(),this.event=void 0,this}destroy(){return this.shutdown(),this}setCompleteCallback(e,t){return this.completeCallback=e,this.scope=t,this}waitCallback(){var e=this,t=function(){e.remove(t)};return this.events.set(t),t}waitEvent(e,t){return e.once(t,this.waitCallback()),this}remove(e){return this.events.delete(e),this.noWaitEvent&&(this.scope?this.completeCallback.call(this.scope):this.completeCallback()),this}clear(){return this.events.clear(),this}get noWaitEvent(){return 0===this.events.size}}class s extends Phaser.Plugins.BasePlugin{constructor(e){super(e)}start(){this.game.events.on("destroy",this.destroy,this)}add(e,s){return new t(e,s)}}return s},"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).rexwaiteventsplugin=t();
