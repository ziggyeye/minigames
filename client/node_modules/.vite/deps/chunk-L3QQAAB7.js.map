{
  "version": 3,
  "sources": ["../../phaser3-rex-plugins/plugins/utils/object/SetValue.js", "../../phaser3-rex-plugins/plugins/gameobjects/dom/utils/Resize.js", "../../phaser3-rex-plugins/plugins/gameobjects/dom/inputtext/InputTextProperties.js", "../../phaser3-rex-plugins/plugins/gameobjects/dom/utils/SetProperties.js", "../../phaser3-rex-plugins/plugins/gameobjects/dom/utils/RouteEvents.js", "../../phaser3-rex-plugins/plugins/gameobjects/dom/utils/StopPropagationTouchEvents.js", "../../phaser3-rex-plugins/plugins/gameobjects/dom/inputtext/InputText.js"],
  "sourcesContent": ["var IsInValidKey = function (keys) {\r\n    return (keys == null) || (keys === '') || (keys.length === 0);\r\n};\r\n\r\nvar GetEntry = function (target, keys, defaultEntry) {\r\n    var entry = target;\r\n    if (IsInValidKey(keys)) {\r\n        //entry = root;\r\n    } else {\r\n        if (typeof (keys) === 'string') {\r\n            keys = keys.split('.');\r\n        }\r\n\r\n        var key;\r\n        for (var i = 0, cnt = keys.length; i < cnt; i++) {\r\n            key = keys[i];\r\n            if ((entry[key] == null) || (typeof (entry[key]) !== 'object')) {\r\n                var newEntry;\r\n                if (i === cnt - 1) {\r\n                    if (defaultEntry === undefined) {\r\n                        newEntry = {};\r\n                    } else {\r\n                        newEntry = defaultEntry;\r\n                    }\r\n                } else {\r\n                    newEntry = {};\r\n                }\r\n\r\n                entry[key] = newEntry;\r\n            }\r\n\r\n            entry = entry[key];\r\n        }\r\n    }\r\n\r\n    return entry;\r\n};\r\n\r\nvar SetValue = function (target, keys, value, delimiter) {\r\n    if (delimiter === undefined) {\r\n        delimiter = '.';\r\n    }\r\n\r\n    // no object\r\n    if (typeof (target) !== 'object') {\r\n        return;\r\n    }\r\n\r\n    // invalid key\r\n    else if (IsInValidKey(keys)) {\r\n        // don't erase target\r\n        if (value == null) {\r\n            return;\r\n        }\r\n        // set target to another object\r\n        else if (typeof (value) === 'object') {\r\n            target = value;\r\n        }\r\n    } else {\r\n        if (typeof (keys) === 'string') {\r\n            keys = keys.split(delimiter);\r\n        }\r\n\r\n        var lastKey = keys.pop();\r\n        var entry = GetEntry(target, keys);\r\n        entry[lastKey] = value;\r\n    }\r\n\r\n    return target;\r\n};\r\n\r\nexport default SetValue;", "var Resize = function (width, height) {\r\n    if (this.scene.sys.scale.autoRound) {\r\n        width = Math.floor(width);\r\n        height = Math.floor(height);\r\n    }\r\n\r\n    if ((this.width === width) && (this.height === height)) {\r\n        return this;\r\n    }\r\n\r\n    var style = this.node.style;\r\n    style.width = `${width}px`;\r\n    style.height = `${height}px`;\r\n    this.updateSize();\r\n    return this;\r\n}\r\n\r\nexport default Resize;", "const ElementProperties = {\r\n    id: ['id', undefined],\r\n    text: ['value', undefined],\r\n    maxLength: ['maxLength', undefined],\r\n    minLength: ['minLength', undefined],\r\n    placeholder: ['placeholder', undefined],\r\n    tooltip: ['title', undefined],\r\n    readOnly: ['readOnly', false],\r\n    spellCheck: ['spellcheck', false],\r\n    autoComplete: ['autocomplete', 'off'],\r\n    autoCapitalize: ['autocapitalize', 'off']\r\n};\r\n\r\nconst StyleProperties = {\r\n    align: ['textAlign', undefined],\r\n    paddingLeft: ['padding-left', undefined],\r\n    paddingRight: ['padding-right', undefined],\r\n    paddingTop: ['padding-top', undefined],\r\n    paddingBottom: ['padding-bottom', undefined],\r\n    fontFamily: ['fontFamily', undefined],\r\n    fontSize: ['font-size', undefined],\r\n    color: ['color', '#ffffff'],\r\n    backgroundColor: ['backgroundColor', 'transparent'],\r\n    border: ['border', 0],\r\n    borderColor: ['borderColor', 'transparent'],\r\n    borderRadius: ['border-radius', undefined],\r\n    outline: ['outline', 'none'],\r\n    direction: ['direction', undefined]\r\n};\r\n\r\nconst ElementEvents = {\r\n    input: 'textchange',\r\n\r\n    click: 'click',\r\n    dblclick: 'dblclick',\r\n\r\n    mousedown: 'pointerdown',\r\n    mousemove: 'pointermove',\r\n    mouseup: 'pointerup',\r\n\r\n    touchstart: 'pointerdown',\r\n    touchmove: 'pointermove',\r\n    touchend: 'pointerup',\r\n\r\n    keydown: 'keydown',\r\n    keyup: 'keyup',\r\n    keypress: 'keypress',\r\n\r\n    compositionstart: 'compositionStart',\r\n    compositionend: 'compositionEnd',\r\n    compositionupdate: 'compositionUpdate',\r\n\r\n    focus: 'focus',\r\n    blur: 'blur',\r\n\r\n    select: 'select',\r\n};\r\n\r\n\r\nexport {\r\n    ElementProperties,\r\n    StyleProperties,\r\n    ElementEvents\r\n};", "const GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nvar SetProperties = function (properties, config, out) {\r\n    if (out === undefined) {\r\n        out = {};\r\n    }\r\n\r\n    var property, value;\r\n    for (var key in properties) {\r\n        property = properties[key];  // [propName, defaultValue]\r\n        value = GetValue(config, key, property[1]);\r\n        if (value !== undefined) {\r\n            out[property[0]] = value;\r\n        }\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nexport default SetProperties;", "const GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nvar RouteEvents = function (gameObject, element, elementEvents, config) {\r\n    var preventDefault = GetValue(config, 'preventDefault', false);\r\n    var preTest = GetValue(config, 'preTest');\r\n    for (let elementEventName in elementEvents) {  // Note: Don't use `var` here\r\n        element.addEventListener(elementEventName, function (e) {\r\n            if (!preTest || preTest(gameObject, elementEventName)) {\r\n                gameObject.emit(elementEvents[elementEventName], gameObject, e);\r\n            }\r\n\r\n            if (preventDefault) {\r\n                e.preventDefault();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default RouteEvents;", "var StopPropagationTouchEvents = function (element) {\r\n    // Don't propagate touch/mouse events to parent(game canvas)\r\n    element.addEventListener('touchstart', callback, false);\r\n    element.addEventListener('touchmove', callback, false);\r\n    element.addEventListener('touchend', callback, false);\r\n    element.addEventListener('mousedown', callback, false);\r\n    element.addEventListener('mouseup', callback, false);\r\n    element.addEventListener('mousemove', callback, false);\r\n}\r\n\r\nvar callback = function (e) {\r\n    e.stopPropagation();\r\n}\r\nexport default StopPropagationTouchEvents;", "import Resize from '../utils/Resize.js';\r\nimport {\r\n    ElementProperties,\r\n    StyleProperties,\r\n    ElementEvents\r\n} from './InputTextProperties.js';\r\nimport SetPrpoerties from '../utils/SetProperties.js';\r\nimport RouteEvents from '../utils/RouteEvents.js';\r\nimport StopPropagationTouchEvents from '../utils/StopPropagationTouchEvents.js';\r\n\r\nconst DOMElement = Phaser.GameObjects.DOMElement;\r\nconst IsPlainObject = Phaser.Utils.Objects.IsPlainObject;\r\nconst GetValue = Phaser.Utils.Objects.GetValue;\r\n\r\nclass InputText extends DOMElement {\r\n    constructor(scene, x, y, width, height, config) {\r\n        if (IsPlainObject(x)) {\r\n            config = x;\r\n            x = GetValue(config, 'x', 0);\r\n            y = GetValue(config, 'y', 0);\r\n            width = GetValue(config, 'width', 0);\r\n            height = GetValue(config, 'height', 0);\r\n        } else if (IsPlainObject(width)) {\r\n            config = width;\r\n            width = GetValue(config, 'width', 0);\r\n            height = GetValue(config, 'height', 0);\r\n        }\r\n\r\n        if (config === undefined) {\r\n            config = {};\r\n        }\r\n\r\n        var element;\r\n        var textType = GetValue(config, 'inputType', undefined);\r\n        if (textType === undefined) {\r\n            textType = GetValue(config, 'type', 'text');\r\n        }\r\n\r\n        if (textType === 'textarea') {\r\n            element = document.createElement('textarea');\r\n            element.style.resize = 'none';\r\n        } else {\r\n            element = document.createElement('input');\r\n            element.type = textType;\r\n        }\r\n\r\n        SetPrpoerties(ElementProperties, config, element);\r\n\r\n        var style = GetValue(config, 'style', undefined);\r\n        style = SetPrpoerties(StyleProperties, config, style);\r\n        // Apply other style properties\r\n        var elementStyle = element.style;\r\n        for (var key in config) {\r\n            if ((key in ElementProperties) || (key in StyleProperties)) {\r\n                continue;\r\n            } else if (key in elementStyle) {\r\n                style[key] = config[key];\r\n            } else if (key in element) {\r\n                if (key === 'type') {\r\n                    continue;\r\n                }\r\n                element[key] = config[key];\r\n            }\r\n        }\r\n        style['box-sizing'] = 'border-box';\r\n        super(scene, x, y, element, style);\r\n        this.type = 'rexInputText';\r\n        this.resize(width, height);\r\n\r\n        // Apply events\r\n        RouteEvents(this, element, ElementEvents);\r\n\r\n        // Don't propagate touch/mouse events to parent(game canvas)\r\n        StopPropagationTouchEvents(element);\r\n\r\n        if (GetValue(config, 'selectAll', false)) {\r\n            this.selectAll();\r\n        }\r\n\r\n        this._isFocused = false;\r\n        this\r\n            .on('focus', function () {\r\n                this._isFocused = true;\r\n            }, this)\r\n            .on('blur', function () {\r\n                this._isFocused = false;\r\n            }, this)\r\n\r\n    }\r\n\r\n    get inputType() {\r\n        if (this.node.tagName.toLowerCase() === 'textarea') {\r\n            return 'textarea';\r\n        } else {\r\n            return this.node.type;\r\n        }\r\n    }\r\n\r\n    get text() {\r\n        return this.node.value;\r\n    }\r\n\r\n    set text(value) {\r\n        this.node.value = value;\r\n    }\r\n\r\n    setText(value) { // Override\r\n        this.text = value;\r\n        return this;\r\n    }\r\n\r\n    get maxLength() {\r\n        return this.node.maxLength;\r\n    }\r\n\r\n    set maxLength(value) {\r\n        this.node.maxLength = value;\r\n    }\r\n\r\n    setMaxLength(value) {\r\n        this.maxLength = value;\r\n        return this;\r\n    }\r\n\r\n    get minLength() {\r\n        return this.node.minLength;\r\n    }\r\n\r\n    set minLength(value) {\r\n        this.node.minLength = value;\r\n    }\r\n\r\n    setMinLength(value) {\r\n        this.minLength = value;\r\n        return this;\r\n    }\r\n\r\n    get placeholder() {\r\n        return this.node.placeholder;\r\n    }\r\n\r\n    set placeholder(value) {\r\n        this.node.placeholder = value;\r\n    }\r\n\r\n    setPlaceholder(value) {\r\n        this.placeholder = value;\r\n        return this;\r\n    }\r\n\r\n    selectText(selectionStart, selectionEnd) {\r\n        if (selectionStart === undefined) {\r\n            this.node.select();\r\n        } else {\r\n            this.node.setSelectionRange(selectionStart, selectionEnd);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    selectAll() {\r\n        this.selectText();\r\n        return this;\r\n    }\r\n\r\n    get selectionStart() {\r\n        return this.node.selectionStart;\r\n    }\r\n\r\n    get selectionEnd() {\r\n        return this.node.selectionEnd;\r\n    }\r\n\r\n    get selectedText() {\r\n        var node = this.node;\r\n        return node.value.substring(node.selectionStart, node.selectionEnd);\r\n    }\r\n\r\n    get cursorPosition() {\r\n        return this.node.selectionStart;\r\n    }\r\n\r\n    set cursorPosition(value) {\r\n        this.node.setSelectionRange(value, value);\r\n    }\r\n\r\n    setCursorPosition(value) {\r\n        if (value === undefined) {\r\n            value = this.text.length;\r\n        } else if (value < 0) {\r\n            value = this.text.length + value;\r\n        }\r\n\r\n        this.cursorPosition = value;\r\n        return this;\r\n    }\r\n\r\n    get tooltip() {\r\n        return this.node.title;\r\n    }\r\n\r\n    set tooltip(value) {\r\n        this.node.title = value;\r\n    }\r\n\r\n    setTooltip(value) {\r\n        this.tooltip = value;\r\n        return this;\r\n    }\r\n\r\n    setTextChangedCallback(callback) {\r\n        this.onTextChanged = callback;\r\n        return this;\r\n    }\r\n\r\n    get readOnly() {\r\n        return this.node.readOnly;\r\n    }\r\n\r\n    set readOnly(value) {\r\n        this.node.readOnly = value;\r\n    }\r\n\r\n    setReadOnly(value) {\r\n        if (value === undefined) {\r\n            value = true;\r\n        }\r\n        this.readOnly = value;\r\n        return this;\r\n    }\r\n\r\n    get spellCheck() {\r\n        return this.node.spellcheck;\r\n    }\r\n\r\n    set spellCheck(value) {\r\n        this.node.spellcheck = value;\r\n    }\r\n\r\n    setSpellCheck(value) {\r\n        this.spellCheck = value;\r\n        return this;\r\n    }\r\n\r\n    get fontColor() {\r\n        return this.node.style.color;\r\n    }\r\n\r\n    set fontColor(value) {\r\n        this.node.style.color = value;\r\n    }\r\n\r\n    setFontColor(value) {\r\n        this.fontColor = value;\r\n        return this;\r\n    }\r\n\r\n    setStyle(key, value) {\r\n        this.node.style[key] = value;\r\n        return this;\r\n    }\r\n\r\n    getStyle(key) {\r\n        return this.node.style[key];\r\n    }\r\n\r\n    scrollToBottom() {\r\n        this.node.scrollTop = this.node.scrollHeight;\r\n        return this;\r\n    }\r\n\r\n    setEnabled(enabled) {\r\n        if (enabled === undefined) {\r\n            enabled = true;\r\n        }\r\n        this.node.disabled = !enabled;\r\n        return this;\r\n    }\r\n\r\n    setBlur() {\r\n        this.node.blur();\r\n        return this;\r\n    }\r\n\r\n    setFocus() {\r\n        this.node.focus();\r\n        return this;\r\n    }\r\n\r\n    get isFocused() {\r\n        return this._isFocused;\r\n    }\r\n\r\n}\r\n\r\nvar methods = {\r\n    resize: Resize\r\n}\r\n\r\nObject.assign(\r\n    InputText.prototype,\r\n    methods\r\n);\r\n\r\nexport default InputText;"],
  "mappings": "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",
  "names": ["GetValue", "GetValue", "callback"]
}
